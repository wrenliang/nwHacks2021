[{"/Users/wrenliang/Documents/UBC Engineering/UBC Engineering 2020/nwHacks 2021/nwhacks2021frontend/src/index.js":"1","/Users/wrenliang/Documents/UBC Engineering/UBC Engineering 2020/nwHacks 2021/nwhacks2021frontend/src/reportWebVitals.js":"2","/Users/wrenliang/Documents/UBC Engineering/UBC Engineering 2020/nwHacks 2021/nwhacks2021frontend/src/App/App.js":"3","/Users/wrenliang/Documents/UBC Engineering/UBC Engineering 2020/nwHacks 2021/nwhacks2021frontend/src/Components/FileDropper/FileDropper.js":"4","/Users/wrenliang/Documents/UBC Engineering/UBC Engineering 2020/nwHacks 2021/nwhacks2021frontend/src/Components/HomePage/HomePage.js":"5","/Users/wrenliang/Documents/UBC Engineering/UBC Engineering 2020/nwHacks 2021/nwhacks2021frontend/src/Components/NoteSetTile/NoteSetTile.js":"6","/Users/wrenliang/Documents/UBC Engineering/UBC Engineering 2020/nwHacks 2021/nwhacks2021frontend/src/Components/SetPage/setPage.js":"7","/Users/wrenliang/Documents/UBC Engineering/UBC Engineering 2020/nwHacks 2021/nwhacks2021frontend/src/Components/LandingPage/LandingPage.js":"8"},{"size":504,"mtime":1610238691917,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1610229077684,"results":"11","hashOfConfig":"10"},{"size":1038,"mtime":1610304996058,"results":"12","hashOfConfig":"10"},{"size":1819,"mtime":1610298103565,"results":"13","hashOfConfig":"10"},{"size":5395,"mtime":1610307497182,"results":"14","hashOfConfig":"10"},{"size":938,"mtime":1610307302926,"results":"15","hashOfConfig":"10"},{"size":5419,"mtime":1610305737112,"results":"16","hashOfConfig":"10"},{"size":9078,"mtime":1610304762233,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1vp6zc8",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"20"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"20"},"/Users/wrenliang/Documents/UBC Engineering/UBC Engineering 2020/nwHacks 2021/nwhacks2021frontend/src/index.js",[],["39","40"],"/Users/wrenliang/Documents/UBC Engineering/UBC Engineering 2020/nwHacks 2021/nwhacks2021frontend/src/reportWebVitals.js",[],"/Users/wrenliang/Documents/UBC Engineering/UBC Engineering 2020/nwHacks 2021/nwhacks2021frontend/src/App/App.js",["41","42"],"import {useState, useEffect} from 'react';\n\n// Component Dependencies\nimport SetPage from '../Components/SetPage/setPage';\nimport HomePage from '../Components/HomePage/HomePage';\nimport LandingPage from '../Components/LandingPage/LandingPage'\n\n// CSS\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\nlet mockSet = {\n  creatorId: \"Matthew\",\n  title: \"nwHacks2021\",\n  collaboratorId: [],\n  cards: [\n    {\n      term: \"YEET\",\n      definition: \"YAW\" \n    },\n    {\n      term: \"YOTE\",\n      definition: \"YOOO\"\n    }\n  ],\n  listOfContributingDocs: \"None\"\n}\n\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <Switch>\n          <Route path=\"/set\" render={(props) => <SetPage {...props} data={mockSet} />}/>\n          <Route path=\"/home\" render={(props) => <HomePage {...props} />}/>\n          <Route path=\"/\" render={(props) => <LandingPage {...props} />}/>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","/Users/wrenliang/Documents/UBC Engineering/UBC Engineering 2020/nwHacks 2021/nwhacks2021frontend/src/Components/FileDropper/FileDropper.js",["43"],"import React from 'react';\nimport { Button } from 'react-bootstrap';\nimport axios from 'axios';\n\n// Component Dependencies\n\n// CSS\nimport './FileDropper.css';\n\nclass FileDropper extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectedFile: null\n        }\n\n        this.fileDidChangeHandler = this.fileDidChangeHandler.bind(this);\n        this.uploadButtonClicked = this.uploadButtonClicked.bind(this);\n    }\n\n    async fileDidChangeHandler(event) {\n        this.setState({\n            selectedFile: event.target.files[0]\n        });\n        console.log(event.target.files[0]);\n\n        const data = new FormData();\n        data.append('file', event.target.files[0]);\n\n        const res = await axios.post(`http://localhost:8000/upload?termProperty=${'bold'}&dividerChar=${':'}`, data, {});\n        // console.log(res);\n\n        this.props.handleNewFetchedData(res);\n    }\n\n    async uploadButtonClicked() {\n        if (this.state.selectedFile != null) {\n            const data = new FormData();\n            data.append('file', this.state.selectedFile);\n\n            const res = await axios.post(`http://localhost:8000/upload?termProperty=${'bold'}&dividerChar=${':'}`, data, {});\n            console.log(res);\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"FileDropper\">\n                <input type=\"file\" name=\"file\" onChange={this.fileDidChangeHandler} className=\"FileInput\"/>\n                {/* <div className=\"CreateButtons\">\n                    <Button onClick={() => this.uploadButtonClicked()} variant=\"primary\"> Create New Notes </Button>\n                    <Button variant=\"light\"> Add to Existing </Button>\n                </div> */}\n                \n            </div>\n        );\n    }\n}\n\nexport default FileDropper;","/Users/wrenliang/Documents/UBC Engineering/UBC Engineering 2020/nwHacks 2021/nwhacks2021frontend/src/Components/HomePage/HomePage.js",["44","45","46"],"/Users/wrenliang/Documents/UBC Engineering/UBC Engineering 2020/nwHacks 2021/nwhacks2021frontend/src/Components/NoteSetTile/NoteSetTile.js",["47"],"/Users/wrenliang/Documents/UBC Engineering/UBC Engineering 2020/nwHacks 2021/nwhacks2021frontend/src/Components/SetPage/setPage.js",["48","49","50","51","52"],"import React from 'react';\n\nimport './setPage.css';\nimport ProfileIcon from './ProfileIcon.svg';\nimport PenIcon from './PenIcon.svg';\nimport ShareIcon from './ShareIcon.svg';\nimport StarIcon from './StarIcon.svg';\nimport YPenIcon from './YPenIcon.svg';\n\n\nclass IndividualCard extends React.Component {\n   constructor(props) {\n      super(props);\n      this.state = {edit: false};\n      this.edit = this.edit.bind(this);\n      this.edit2 = this.edit2.bind(this);\n   }\n\n   shouldComponentUpdate(nextProps, nextState){\n      if(nextState.edit !== this.state.edit) {\n         console.log(nextState);\n         return true;\n      }\n\n      return false;\n   }\n\n   edit() {\n      let e  = !this.state.edit;\n      this.setState({edit: e});\n   }\n\n   edit2 () {\n      const newText = document.getElementById('text').value;\n      console.log(newText);\n      let d = this.props.set; \n\n      for (let i = 0; i < d.cards.length; i++) {\n         if(d.cards[i].term === this.props.term) {\n            d.cards[i].def = newText;\n         }\n      }\n\nconsole.log(d);\n\n      fetch('http://127.0.0.1:8000/sets', {\n         headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n          },\n         method: 'PUT',\n          body: JSON.stringify(\n             d\n          )\n      })\n\n      this.edit();\n   }\n\n   render() {\n      return(\n\n         <div className=\"individualCard\">\n         <div className=\"Term\">\n                     <h1>{this.props.term}</h1>\n                  </div>\n         <div className=\"Definition\">\n            {this.state.edit && \n            <form>\n               <textarea id=\"text\">\n                  {this.props.def}\n               </textarea>\n            </form> \n            }\n\n            {!this.state.edit && \n            <h1>{this.props.def}</h1>\n            }\n\n            <div className=\"Icons\"> \n               <img src={StarIcon} />\n\n               {this.state.edit && \n                  <img src={YPenIcon} onClick={this.edit2} />\n               }\n               {!this.state.edit && \n                  <img src={PenIcon} onClick={this.edit} />\n               }\n            </div>\n         </div>\n         </div>\n      )\n   }\n}\n\nclass CardList extends React.Component {\n   constructor(props) {\n      super(props);\n      this.state = {edit: false};\n   }\n\n   render() {\n      return (\n         <div>\n            {this.props.data.map(card => {\n               return (\n\n                  <IndividualCard def={card.def} term={card.term} set={this.props.set}/>\n\n               )\n            })}\n         </div>\n      )\n   }\n         \n}\nclass SetPage extends React.Component {\n   constructor(props) {\n      super(props);\n      this.state = {cards: this.props.location.state.set.cards, count: this.props.location.state.setSize, cardState: \"Term\"};\n\n      console.log(this.state);\n      this.forwardCard = this.forwardCard.bind(this);\n      this.backwardCard = this.backwardCard.bind(this);\n      this.changeText = this.changeText.bind(this);\n   }\n\n   forwardCard = () => {\n      let currCount = this.state.count + 1 > this.state.cards.length ? 1 : this.state.count + 1;\n      let currCards = this.state.cards;\n      let popCard = currCards.shift();\n      currCards.push(popCard);\n      this.setState({cards: currCards, count: currCount, cardState: \"Term\"});\n   }\n\n   backwardCard = () => {\n      let currCount = this.state.count ===  1 ? this.state.cards.length : this.state.count - 1;\n      let currCards = this.state.cards;\n      let popCard = currCards.pop();\n      currCards.unshift(popCard);\n      this.setState({cards: currCards, count: currCount, cardState: \"Term\"});\n   }\n\n   changeText = () => {\n      let currText = this.state.cardState;\n      currText === \"Term\" ? this.setState({cardState: \"Definition\"}) : this.setState({cardState: \"Term\"});\n\n   }\n\n\n   render() {\n      console.log(this.props.location.state);\n\n      return (\n         <div>\n            <div className=\"header\">\n               <h1>WIREFRAME</h1>\n            </div>\n            <div className=\"setInfo\">\n               <h1>{this.props.location.state.title}</h1>\n               <div className=\"creatorInfo\">\n                  <img src={ProfileIcon} />\n                  <div>\n                     <h3>Created By</h3>\n                     <h2>{this.props.location.state.creatorId}</h2>\n                  </div>\n               </div>\n\n\n               <div className=\"card\" onClick={this.changeText}>\n                  <h1 >{this.state.cardState === \"Term\" ? this.state.cards[0].term : this.state.cards[0].def}</h1>\n               </div>\n\n               <div className=\"cardNav\">\n                  <h1 onClick={this.backwardCard} className=\"Arrow\">{\"<\"}  &nbsp;</h1> \n                  <h1>{this.state.count} / {this.state.cards.length}</h1> \n                  <h1 onClick={this.forwardCard} className=\"Arrow\"> &nbsp; {\">\"}</h1> \n               </div>\n            </div>\n\n\n            <div className=\"bottomHalf\">\n               <div className=\"cueCardsList\">\n                  <div className=\"listHeader\">\n                     <h1>All &nbsp;</h1>\n                     <h2>&nbsp; Starred</h2>\n                  </div>\n\n                  <div class=\"list\">\n                     <CardList data={this.props.location.state.set.cards} set={this.props.location.state.set}/>\n\n                  </div>\n               </div>\n\n            </div>\n\n\n         </div>\n      )\n   }\n}\n\nexport default SetPage;","/Users/wrenliang/Documents/UBC Engineering/UBC Engineering 2020/nwHacks 2021/nwhacks2021frontend/src/Components/LandingPage/LandingPage.js",["53","54","55","56","57"],"import React, { useState } from 'react';\nimport Modal from 'react-bootstrap/Modal'\nimport Button from 'react-bootstrap/Button'\nimport \"./LandingPage.css\"\nimport Landing_Page_Graphic from \"./Landing_Page_Graphic.svg\"\nvar firebase = require(\"firebase/app\").default;\n\nrequire('firebase/auth');\nrequire('firebase/database');\nrequire('firebase/storage');\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyDiMhw8ocS_YU4t0A95Nw0o8FCc_ThG9pU\",\n    authDomain: \"nwhacks2021-f6e09.firebaseapp.com\",\n    databaseURL: \"https://nwhacks2021-f6e09-default-rtdb.firebaseio.com\",\n    projectId: \"nwhacks2021-f6e09\",\n    storageBucket: \"nwhacks2021-f6e09.appspot.com\",\n    messagingSenderId: \"328011177868\",\n    appId: \"1:328011177868:web:463da6aaa9eaf03280c0a9\",\n    measurementId: \"G-PJSEW8HWLK\"\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nvar globalUsername;\n\nclass PopUp extends React.Component{\n    constructor(props){\n        super(props);\n\n        this.state = {\n            username: \"\",\n            email: \"\",\n            password: \"\"\n        }\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange(event){\n        const {name, value} = event.target;\n\n        this.setState(() => ({\n            [name]: value\n        }))\n    }\n\n    handleSubmit(event){\n        event.preventDefault();\n        var {username, email, password} = this.state;\n        console.log(username);\n        console.log(email);\n        console.log(password);\n\n        globalUsername = username;\n        \n        firebase.auth().createUserWithEmailAndPassword(email, password)\n            .then((user) => {\n                console.log(\"sign up success\");\n                console.log(\"uid:\" + user.user.uid);\n                var postBody = {\n                    uuid: user.user.uid,\n                    username: username,\n                    syntax: {\n                        termProperty: \"bold\",\n\t                    dividerChar: \":\"\n                    }\n                }\n                fetch(\"http://localhost:8000/users\", {\n                    method: 'POST',\n                    body: JSON.stringify(postBody), // string or object\n                    headers: {\n                    'Content-Type': 'application/json'\n                    }\n                });\n                // Signed in \n                // ...\n\n                // this.props.pushHandler(user);\n                this.props.historyProp.push({\n                    pathname: '/home',\n                    state: user\n                });\n            })\n            .catch((error) => {\n                var errorCode = error.code;\n                var errorMessage = error.message;\n            });\n    }\n\n    render(){\n        return(\n            <div className=\"greyBackground\">\n                <div className=\"popUp\">\n                    <button className=\"closePopUp\" onClick={this.props.closePopup}>close me</button>\n                    <form className=\"form\" onSubmit={this.handleSubmit}>\n                        <label className=\"formLabel\">USERNAME:</label>\n                        <input className=\"popUpInput\" type=\"text\" name=\"username\" value={this.state.username} onChange={this.handleChange}/>\n                        <label className=\"formLabel\">EMAIL:</label>\n                        <input className=\"popUpInput\" type=\"email\" name=\"email\" value={this.state.email} onChange={this.handleChange}/>\n                        <label className=\"formLabel\">PASSWORD:</label>\n                        <input className=\"popUpInput\" type=\"password\" name=\"password\" value={this.state.password} onChange={this.handleChange}/>\n                        <input className=\"popUpSignUp\" type=\"submit\" value=\"Sign up\" />\n                    </form>\n                </div>\n            </div>\n            \n        );\n    }\n}\n\nfunction Example() {\n    const [show, setShow] = useState(false);\n  \n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n  \n    return (\n      <>\n        <Button variant=\"primary\" onClick={handleShow}>\n          Launch static backdrop modal\n        </Button>\n  \n        <Modal\n          show={show}\n          onHide={handleClose}\n          backdrop=\"static\"\n          keyboard={false}\n        >\n          <Modal.Header closeButton>\n            <Modal.Title>Modal title</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            I will not close if you click outside me. Don't even try to press\n            escape key.\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={handleClose}>\n              Close\n            </Button>\n            <Button variant=\"primary\">Understood</Button>\n          </Modal.Footer>\n        </Modal>\n      </>\n    );\n  }\n\nclass LandingPage extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            showPopup: false\n        };\n\n        this.logIn = this.logIn.bind();\n        this.signUp = this.signUp.bind();\n        this.signOut = this.signOut.bind();\n        this.togglePopup= this.togglePopup.bind(this);\n    }\n\n    togglePopup() {\n        console.log(\"executing toggle pop up\");\n        this.setState({\n            showPopup: !this.state.showPopup\n        });\n    }\n\n    logIn(){\n        console.log(\"pressed log in\");\n        this.togglePopup();\n        // firebase.auth().signInWithEmailAndPassword(\"alan.shuyaowen@gmail.com\", \"password\")\n        //     .then((user) => {\n        //         console.log(\"log in success\");\n                \n        //         // Signed in \n        //         // ...\n        //     })\n        //     .catch((error) => {\n        //         var errorCode = error.code;\n        //         var errorMessage = error.message;\n        //         // ..\n        //     });\n    }\n\n    signUp(){\n        console.log(\"pressed sign up\");\n        // firebase.auth().createUserWithEmailAndPassword(\"alan.shuyaowen@gmail.com\", \"password\")\n        //     .then((user) => {\n        //         console.log(\"sign up success\");\n                \n        //         // Signed in \n        //         // ...\n        //     })\n        //     .catch((error) => {\n        //         var errorCode = error.code;\n        //         var errorMessage = error.message;\n        //     });\n    }\n\n    signOut(){\n        console.log(\"pressed sign out\");\n        // firebase.auth().signOut().then(() => {\n        //     // Sign-out successful.\n        //   }).catch((error) => {\n        //     // An error happened.\n        //   });\n    }\n\n    pushToHomePage = (user) => {\n        console.log('calling this');\n        this.props.history.push({\n            pathname: '/home',\n            state: user\n        });\n    }\n\n    render(){\n        return(\n            <div class=\"pageContainer\">\n                <div className=\"NavBar\">\n                    <h1 className=\"navTitle\">WIREFRAME</h1>\n                    <div className=\"buttonGroup\">\n                        <button className=\"loginButton\">Log in</button>\n                        <button className=\"signUpButton\" onClick={this.togglePopup}>Sign up</button>\n                        {/* <button onClick={this.signOut}>Sign out</button> */}\n                    </div>\n                </div>\n                <div className=\"container\">\n                    <div className=\"subContainter\">\n                        <p className=\"titleText\">Turn your notes<br/>into cue-cards</p>\n                        <button className=\"getStartedButton\" onClick={this.togglePopup}>Get started</button>\n                    </div>\n                    {/* <div className=\"tempForGraphic\">temp</div> */}\n                    <img src={Landing_Page_Graphic} className=\"landingPageImage\"/>\n                </div>\n                {this.state.showPopup ? \n                    <PopUp\n                        closePopup={this.togglePopup.bind(this)}\n                        pushHandler={this.pushToHomePage}\n                        historyProp={this.props.history}\n                    />\n                    : null\n                }\n\n                {/* <Button variant=\"primary\" onClick={handleShow}>\n                    Launch static backdrop modal\n                </Button> */}\n\n                \n            </div>\n            \n        )\n    }\n}\n\nfirebase.auth().onAuthStateChanged((user) => {\n    if (user) {\n        // User is signed in, see docs for a list of available properties\n        // https://firebase.google.com/docs/reference/js/firebase.User\n        console.log(\"in onauthstatechange\");\n        var uid = user.uid;\n        console.log(uid);\n        // var postBody = {\n        //     uuid: uid,\n        //     username: globalUsername,\n        //     syntax: {}\n        // }\n        // fetch(\"http://localhost:8000/users\", {\n        //     method: 'POST',\n        //     body: JSON.stringify(postBody), // string or object\n        //     headers: {\n        //     'Content-Type': 'application/json'\n        //     }\n        // });\n        // ...\n    } else {\n      // User is signed out\n      // ...\n    }\n});\n\nexport default LandingPage;",{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":1,"column":9,"nodeType":"64","messageId":"65","endLine":1,"endColumn":17},{"ruleId":"62","severity":1,"message":"66","line":1,"column":19,"nodeType":"64","messageId":"65","endLine":1,"endColumn":28},{"ruleId":"62","severity":1,"message":"67","line":2,"column":10,"nodeType":"64","messageId":"65","endLine":2,"endColumn":16},{"ruleId":"68","severity":1,"message":"69","line":139,"column":60,"nodeType":"70","endLine":139,"endColumn":140},{"ruleId":"68","severity":1,"message":"69","line":140,"column":60,"nodeType":"70","endLine":140,"endColumn":142},{"ruleId":"68","severity":1,"message":"69","line":141,"column":60,"nodeType":"70","endLine":141,"endColumn":148},{"ruleId":"68","severity":1,"message":"69","line":23,"column":56,"nodeType":"70","endLine":23,"endColumn":139},{"ruleId":"62","severity":1,"message":"71","line":6,"column":8,"nodeType":"64","messageId":"65","endLine":6,"endColumn":17},{"ruleId":"68","severity":1,"message":"69","line":81,"column":16,"nodeType":"70","endLine":81,"endColumn":38},{"ruleId":"68","severity":1,"message":"69","line":84,"column":19,"nodeType":"70","endLine":84,"endColumn":62},{"ruleId":"68","severity":1,"message":"69","line":87,"column":19,"nodeType":"70","endLine":87,"endColumn":60},{"ruleId":"68","severity":1,"message":"69","line":162,"column":19,"nodeType":"70","endLine":162,"endColumn":44},{"ruleId":"62","severity":1,"message":"72","line":56,"column":9,"nodeType":"64","messageId":"65","endLine":56,"endColumn":23},{"ruleId":"62","severity":1,"message":"73","line":87,"column":21,"nodeType":"64","messageId":"65","endLine":87,"endColumn":30},{"ruleId":"62","severity":1,"message":"74","line":88,"column":21,"nodeType":"64","messageId":"65","endLine":88,"endColumn":33},{"ruleId":"62","severity":1,"message":"75","line":113,"column":10,"nodeType":"64","messageId":"65","endLine":113,"endColumn":17},{"ruleId":"68","severity":1,"message":"69","line":235,"column":21,"nodeType":"70","endLine":235,"endColumn":83},"no-native-reassign",["76"],"no-negated-in-lhs",["77"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Button' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'ShareIcon' is defined but never used.","'globalUsername' is assigned a value but never used.","'errorCode' is assigned a value but never used.","'errorMessage' is assigned a value but never used.","'Example' is defined but never used.","no-global-assign","no-unsafe-negation"]