[{"C:\\Users\\wensh\\OneDrive - alumni.ubc.ca\\Documents\\Code\\nwHacks2021\\nwhacks2021frontend\\src\\index.js":"1","C:\\Users\\wensh\\OneDrive - alumni.ubc.ca\\Documents\\Code\\nwHacks2021\\nwhacks2021frontend\\src\\reportWebVitals.js":"2","C:\\Users\\wensh\\OneDrive - alumni.ubc.ca\\Documents\\Code\\nwHacks2021\\nwhacks2021frontend\\src\\App\\App.js":"3","C:\\Users\\wensh\\OneDrive - alumni.ubc.ca\\Documents\\Code\\nwHacks2021\\nwhacks2021frontend\\src\\Components\\HomePage\\HomePage.js":"4","C:\\Users\\wensh\\OneDrive - alumni.ubc.ca\\Documents\\Code\\nwHacks2021\\nwhacks2021frontend\\src\\Components\\LandingPage\\LandingPage.js":"5","C:\\Users\\wensh\\OneDrive - alumni.ubc.ca\\Documents\\Code\\nwHacks2021\\nwhacks2021frontend\\src\\Components\\SetPage\\setPage.js":"6","C:\\Users\\wensh\\OneDrive - alumni.ubc.ca\\Documents\\Code\\nwHacks2021\\nwhacks2021frontend\\src\\Components\\FileDropper\\FileDropper.js":"7","C:\\Users\\wensh\\OneDrive - alumni.ubc.ca\\Documents\\Code\\nwHacks2021\\nwhacks2021frontend\\src\\Components\\NoteSetTile\\NoteSetTile.js":"8"},{"size":521,"mtime":1610240597786,"results":"9","hashOfConfig":"10"},{"size":375,"mtime":1610230255102,"results":"11","hashOfConfig":"10"},{"size":1087,"mtime":1610309696577,"results":"12","hashOfConfig":"10"},{"size":5571,"mtime":1610309278454,"results":"13","hashOfConfig":"10"},{"size":12851,"mtime":1610309300151,"results":"14","hashOfConfig":"10"},{"size":5621,"mtime":1610309278462,"results":"15","hashOfConfig":"10"},{"size":1878,"mtime":1610299814145,"results":"16","hashOfConfig":"10"},{"size":967,"mtime":1610309278456,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"jx8kvj",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"20"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"20"},"C:\\Users\\wensh\\OneDrive - alumni.ubc.ca\\Documents\\Code\\nwHacks2021\\nwhacks2021frontend\\src\\index.js",[],["40","41"],"C:\\Users\\wensh\\OneDrive - alumni.ubc.ca\\Documents\\Code\\nwHacks2021\\nwhacks2021frontend\\src\\reportWebVitals.js",[],"C:\\Users\\wensh\\OneDrive - alumni.ubc.ca\\Documents\\Code\\nwHacks2021\\nwhacks2021frontend\\src\\App\\App.js",["42","43"],"C:\\Users\\wensh\\OneDrive - alumni.ubc.ca\\Documents\\Code\\nwHacks2021\\nwhacks2021frontend\\src\\Components\\HomePage\\HomePage.js",["44","45","46"],"import React from 'react';\r\nimport { Button, Navbar, Modal, Form } from 'react-bootstrap';\r\nimport axios from 'axios';\r\n\r\n// Component Dependencies\r\nimport NoteSetTile from '../NoteSetTile/NoteSetTile';\r\nimport FileDropper from '../FileDropper/FileDropper';\r\n\r\n// CSS\r\nimport './HomePage.css';\r\n\r\n// Icons\r\nimport HomeIcon from './HomeIcon.svg';\r\nimport FolderIcon from './FolderIcon.svg';\r\nimport SharedWithMeIcon from './SharedWithMeIcon.svg';\r\n\r\nclass HomePage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            tabSelected: 0,\r\n            showModal: true,\r\n            firebaseUser: this.props.location.state,\r\n            sets: [],\r\n            creatorId: \"1234\"\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getUserSets();\r\n        console.log(this.state);\r\n    }\r\n\r\n    clickedOnASet = (index) => {\r\n        console.log(`clicked ${index}`);\r\n        this.props.history.push({\r\n            pathname: '/set',\r\n            state: this.state.sets[index]\r\n        });\r\n    }\r\n\r\n    listOfSets = () => {\r\n        if (this.state.tabSelected === 0) {\r\n            const list = this.state.sets.map((set, index) => {\r\n                return (\r\n                    <NoteSetTile\r\n                        key={index}\r\n                        setTitle={set.set.title}\r\n                        setNumTerms={set.setSize}\r\n                        setCreator={set.set.creatorId}\r\n                        clickHandler={() => this.clickedOnASet(index)}\r\n                        >\r\n                    </NoteSetTile>\r\n                );\r\n            });\r\n            return list;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    toggleModal = () => {\r\n        this.setState({\r\n            showModal: !this.state.showModal\r\n        });\r\n\r\n        this.forceUpdate();\r\n    }\r\n\r\n    titleDidChange = (event) => {\r\n        this.setState({\r\n            newSetTitle: event.target.value\r\n        });\r\n    }\r\n\r\n    handleNewFetchedData = (res) => {\r\n        console.log(res);\r\n        console.log(`Array ${res.data}`);\r\n        this.setState({\r\n            newSetCards: res.data\r\n        });\r\n    }\r\n\r\n    getUserSets = async () => {\r\n        const url = `http://localhost:8000/sets?creatorId=${this.state.creatorId}`;\r\n\r\n        const res = await axios.get(url);\r\n\r\n        let sets = [];\r\n\r\n        for (var set of res.data.sets) {\r\n            sets.push({\r\n                set: set,\r\n                setSize: set.cards.length\r\n            });\r\n        }\r\n\r\n        this.setState({\r\n            sets: sets\r\n        });\r\n\r\n        console.log(this.state);\r\n    }\r\n\r\n    postCreatedSet = async () => {\r\n        const url = `http://localhost:8000/sets`;\r\n\r\n        const body = {\r\n            creatorId: this.state.creatorId,\r\n            title: this.state.newSetTitle,\r\n            cards: this.state.newSetCards\r\n        }\r\n\r\n        const res = await axios.post(url, body);\r\n\r\n        console.log(res);\r\n    }\r\n\r\n    createNewCardsClicked = async () => {\r\n        await this.postCreatedSet();\r\n\r\n        await this.getUserSets();\r\n        this.forceUpdate();\r\n\r\n        this.toggleModal();\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"HomePage\">\r\n                <Navbar fixed=\"top\" variant=\"primary\" className=\"HomeNavBar\">\r\n                    <Navbar.Brand style={{color: \"white\"}}> <strong>CueTips</strong></Navbar.Brand>\r\n                </Navbar>\r\n                <div className=\"Sidebar\">\r\n                    <div className=\"SidebarOptions\">\r\n                        <Button onClick={this.toggleModal} style={{width: \"90%\", backgroundColor: \"#5C9CF5\"}}> + Upload Notes </Button>\r\n                        <h5 className=\"SidebarOptionText\"> <img src={HomeIcon} width={26} height={26} className=\"d-inline-block align-top\"></img> Home</h5>\r\n                        <h5 className=\"SidebarOptionText\"> <img src={FolderIcon} width={26} height={26} className=\"d-inline-block align-top\"></img> Folders</h5>\r\n                        <h5 className=\"SidebarOptionText\"> <img src={SharedWithMeIcon} width={26} height={26} className=\"d-inline-block align-top\"></img> Shared with me</h5>\r\n                    </div>\r\n                </div>\r\n                <div className=\"MainScreen\">\r\n                    <div className=\"NoteSetTiles\">\r\n                        {this.listOfSets()}\r\n                    </div>\r\n                </div>\r\n\r\n                <Modal show={this.state.showModal} onHide={this.toggleModal}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Upload Notes</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        \r\n                        <FileDropper handleNewFetchedData={this.handleNewFetchedData}></FileDropper>\r\n                        <Form>\r\n                            <br />\r\n                            <Form.Control type=\"email\" placeholder=\"Card Set name\" onChange={this.titleDidChange}/>\r\n                        </Form>\r\n\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={this.toggleModal}>\r\n                            Close\r\n                        </Button>\r\n                        <Button variant=\"primary\" onClick={this.createNewCardsClicked}>\r\n                            Create new cards\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HomePage;","C:\\Users\\wensh\\OneDrive - alumni.ubc.ca\\Documents\\Code\\nwHacks2021\\nwhacks2021frontend\\src\\Components\\LandingPage\\LandingPage.js",["47","48","49","50","51"],"import React, { useState } from 'react';\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Button from 'react-bootstrap/Button'\r\nimport \"./LandingPage.css\"\r\nimport Landing_Page_Graphic from \"./Landing_Page_Graphic.svg\"\r\nimport {withRouter} from 'react-router-dom';\r\nvar firebase = require(\"firebase/app\").default;\r\n\r\nrequire('firebase/auth');\r\nrequire('firebase/database');\r\nrequire('firebase/storage');\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyDiMhw8ocS_YU4t0A95Nw0o8FCc_ThG9pU\",\r\n    authDomain: \"nwhacks2021-f6e09.firebaseapp.com\",\r\n    databaseURL: \"https://nwhacks2021-f6e09-default-rtdb.firebaseio.com\",\r\n    projectId: \"nwhacks2021-f6e09\",\r\n    storageBucket: \"nwhacks2021-f6e09.appspot.com\",\r\n    messagingSenderId: \"328011177868\",\r\n    appId: \"1:328011177868:web:463da6aaa9eaf03280c0a9\",\r\n    measurementId: \"G-PJSEW8HWLK\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nvar globalUsername;\r\n\r\nclass PopUpH extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            username: \"\",\r\n            email: \"\",\r\n            password: \"\",\r\n            termProperty: \"\",\r\n            dividerProperty: \"\",\r\n            showSyntaxPopUp: false,\r\n        }\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.submitLogin = this.submitLogin.bind(this);\r\n        this.showSyntaxPopUp = this.showSyntaxPopUp.bind(this);\r\n        this.closeSyntaxPopUp = this.closeSyntaxPopUp.bind(this);\r\n    }\r\n\r\n    closeSyntaxPopUp(){\r\n        this.setState({\r\n            showSyntaxPopUp: false\r\n        });\r\n    }\r\n\r\n    showSyntaxPopUp(){\r\n        this.setState({\r\n            showSyntaxPopUp: true\r\n        });\r\n    }\r\n\r\n    handleChange(event){\r\n        let {name, value} = event.target;\r\n\r\n        this.setState(() => ({\r\n            [name]: value\r\n        }))\r\n\r\n        \r\n    }\r\n\r\n    submitLogin(event){\r\n        event.preventDefault();\r\n        this.showSyntaxPopUp();\r\n    }\r\n\r\n    handleSubmit(event){\r\n        event.preventDefault();\r\n        var {username, email, password, termProperty, dividerProperty, temp} = this.state;\r\n        console.log(username);\r\n        console.log(email);\r\n        console.log(password);\r\n        console.log(termProperty);\r\n        console.log(dividerProperty);\r\n\r\n        globalUsername = username;\r\n        \r\n        firebase.auth().createUserWithEmailAndPassword(email, password)\r\n            .then((user) => {\r\n                console.log(\"sign up success\");\r\n                console.log(\"uid:\" + user.user.uid);\r\n                var postBody = {\r\n                    uuid: user.user.uid,\r\n                    username: username,\r\n                    syntax: {\r\n                        termProperty: termProperty,\r\n\t                    dividerChar: dividerProperty\r\n                    }\r\n                }\r\n                // fetch(\"http://localhost:8000/users\", {\r\n                //     method: 'POST',\r\n                //     body: JSON.stringify(postBody), // string or object\r\n                //     headers: {\r\n                //     'Content-Type': 'application/json'\r\n                //     }\r\n                // });\r\n                // Signed in \r\n                // ...\r\n\r\n                // this.props.switchPage(user);\r\n                // // console.log(this.props.history);\r\n                // this.props.history.push({\r\n                //     pathname: '/home',\r\n                // });\r\n                \r\n                this.props.history.push('/home');\r\n            })\r\n            .catch((error) => {\r\n                var errorCode = error.code;\r\n                var errorMessage = error.message;\r\n                console.log(\"error code: \" + errorCode);\r\n                console.log(\"error message:\" + errorMessage);\r\n            });\r\n\r\n    }\r\n    \r\n    // adding syntax pop up to the home page\r\n    // needs handleChange and handleSubmit\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"greyBackground\">\r\n                <div className=\"popUp\">\r\n                    <button className=\"closePopUp\" onClick={this.props.closePopup}>close me</button>\r\n                    <form className=\"form\" onSubmit={this.submitLogin}>\r\n                        <label className=\"formLabel\">USERNAME:</label>\r\n                        <input className=\"popUpInput\" type=\"text\" name=\"username\" value={this.state.username} onChange={this.handleChange}/>\r\n                        <label className=\"formLabel\">EMAIL:</label>\r\n                        <input className=\"popUpInput\" type=\"email\" name=\"email\" value={this.state.email} onChange={this.handleChange}/>\r\n                        <label className=\"formLabel\">PASSWORD:</label>\r\n                        <input className=\"popUpInput\" type=\"password\" name=\"password\" value={this.state.password} onChange={this.handleChange}/>\r\n                        <input className=\"popUpSignUp\" type=\"submit\" value=\"Sign up\" />\r\n                    </form>\r\n                </div>\r\n                <Modal\r\n                    show={this.state.showSyntaxPopUp}\r\n                    onHide={this.closeSyntaxPopUp}\r\n                    backdrop=\"static\"\r\n                    keyboard={false}\r\n                    centered\r\n                    size=\"lg\"\r\n                >\r\n                    \r\n                    <Modal.Header closeButton>\r\n                        <div>\r\n                            <Modal.Title>Customize how your notes will be recognized</Modal.Title>\r\n                            <p>You can change this later</p>\r\n                        </div>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <form className=\"form\">\r\n                            <label className=\"formLabel\">Term Property</label>\r\n                            <select name=\"termProperty\" id=\"termProperty\" onChange={this.handleChange}>\r\n                                <option disabled selected value> -- select an option -- </option>\r\n                                <option value=\"bold\">Bold</option>\r\n                                <option value=\"italic\">Italic</option>\r\n                                <option value=\"underline\">underline</option>\r\n                            </select>\r\n                            <label className=\"formLabel\">Divider Property</label>\r\n                            <select name=\"dividerProperty\" id=\"dividerProperty\" onChange={this.handleChange}>\r\n                                <option disabled selected value> -- select an option -- </option>\r\n                                <option value=\":\">:</option>\r\n                                <option value=\"-\">-</option>\r\n                                <option value=\"/\">/</option>\r\n                            </select>\r\n                        </form>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"primary\" onClick={this.handleSubmit}>Create Syntax</Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </div>\r\n            \r\n        );\r\n    }\r\n}\r\n\r\nconst PopUp = withRouter(PopUpH);\r\nfunction Example() {\r\n    const [show, setShow] = useState(false);\r\n  \r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n  \r\n    return (\r\n      <>\r\n        <Button variant=\"primary\" onClick={handleShow}>\r\n          Launch static backdrop modal\r\n        </Button>\r\n  \r\n        <Modal\r\n          show={show}\r\n          onHide={handleClose}\r\n          backdrop=\"static\"\r\n          keyboard={false}\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Modal title</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            I will not close if you click outside me. Don't even try to press\r\n            escape key.\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={handleClose}>\r\n              Close\r\n            </Button>\r\n            <Button variant=\"primary\">Understood</Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n\r\nclass LandingPage extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            showPopup: false\r\n        };\r\n\r\n        this.logIn = this.logIn.bind();\r\n        this.signUp = this.signUp.bind();\r\n        this.signOut = this.signOut.bind();\r\n        this.togglePopup= this.togglePopup.bind(this);\r\n        this.switchPage = this.switchPage.bind(this);\r\n    }\r\n\r\n    switchPage(user) {\r\n        console.log(\"CMON\");\r\n        this.history.props.push({\r\n            pathname: '/home',\r\n            state: user\r\n        })\r\n    }\r\n\r\n    togglePopup() {\r\n        console.log(\"executing toggle pop up\");\r\n        this.setState({\r\n            showPopup: !this.state.showPopup\r\n        });\r\n    }\r\n\r\n    logIn(){\r\n        console.log(\"pressed log in\");\r\n        this.togglePopup();\r\n        // firebase.auth().signInWithEmailAndPassword(\"alan.shuyaowen@gmail.com\", \"password\")\r\n        //     .then((user) => {\r\n        //         console.log(\"log in success\");\r\n                \r\n        //         // Signed in \r\n        //         // ...\r\n        //     })\r\n        //     .catch((error) => {\r\n        //         var errorCode = error.code;\r\n        //         var errorMessage = error.message;\r\n        //         // ..\r\n        //     });\r\n    }\r\n\r\n    signUp(){\r\n        console.log(\"pressed sign up\");\r\n        // firebase.auth().createUserWithEmailAndPassword(\"alan.shuyaowen@gmail.com\", \"password\")\r\n        //     .then((user) => {\r\n        //         console.log(\"sign up success\");\r\n                \r\n        //         // Signed in \r\n        //         // ...\r\n        //     })\r\n        //     .catch((error) => {\r\n        //         var errorCode = error.code;\r\n        //         var errorMessage = error.message;\r\n        //     });\r\n    }\r\n\r\n    signOut(){\r\n        console.log(\"pressed sign out\");\r\n        // firebase.auth().signOut().then(() => {\r\n        //     // Sign-out successful.\r\n        //   }).catch((error) => {\r\n        //     // An error happened.\r\n        //   });\r\n    }\r\n\r\n    pushToHomePage = (user) => {\r\n        console.log('calling this');\r\n        this.props.history.push({\r\n            pathname: '/home',\r\n            state: user\r\n        });\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div class=\"pageContainer\">\r\n                <div className=\"NavBar\">\r\n                    <h1 className=\"navTitle\">QueTips</h1>\r\n                    <div className=\"buttonGroup\">\r\n                        <button className=\"loginButton\">Log in</button>\r\n                        <button className=\"signUpButton\" onClick={this.togglePopup}>Sign up</button>\r\n                        {/* <button onClick={this.signOut}>Sign out</button> */}\r\n                    </div>\r\n                </div>\r\n                <div className=\"container\">\r\n                    <div className=\"subContainter\">\r\n                        <p className=\"titleText\">Turn your notes<br/>into cue-cards</p>\r\n                        <button className=\"getStartedButton\" onClick={this.togglePopup}>Get started</button>\r\n                    </div>\r\n                    {/* <div className=\"tempForGraphic\">temp</div> */}\r\n                    <img src={Landing_Page_Graphic} className=\"landingPageImage\"/>\r\n                </div>\r\n                {this.state.showPopup ? \r\n                    <PopUp\r\n                        closePopup={this.togglePopup.bind(this)}\r\n                        pushHandler={this.pushToHomePage}\r\n                        historyProp={this.switchPage}\r\n                    />\r\n                    : null\r\n                }\r\n\r\n                {/* <Button variant=\"primary\" onClick={handleShow}>\r\n                    Launch static backdrop modal\r\n                </Button> */}\r\n\r\n                \r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\n// firebase.auth().onAuthStateChanged((user) => {\r\n//     if (user) {\r\n//         // User is signed in, see docs for a list of available properties\r\n//         // https://firebase.google.com/docs/reference/js/firebase.User\r\n//         console.log(\"in onauthstatechange\");\r\n//         var uid = user.uid;\r\n//         console.log(uid);\r\n//         // var postBody = {\r\n//         //     uuid: uid,\r\n//         //     username: globalUsername,\r\n//         //     syntax: {}\r\n//         // }\r\n//         // fetch(\"http://localhost:8000/users\", {\r\n//         //     method: 'POST',\r\n//         //     body: JSON.stringify(postBody), // string or object\r\n//         //     headers: {\r\n//         //     'Content-Type': 'application/json'\r\n//         //     }\r\n//         // });\r\n//         // ...\r\n//     } else {\r\n//       // User is signed out\r\n//       // ...\r\n//     }\r\n    \r\n// })\r\n\r\nexport default LandingPage;","C:\\Users\\wensh\\OneDrive - alumni.ubc.ca\\Documents\\Code\\nwHacks2021\\nwhacks2021frontend\\src\\Components\\SetPage\\setPage.js",["52","53","54","55","56"],"import React from 'react';\r\n\r\nimport './setPage.css';\r\nimport ProfileIcon from './ProfileIcon.svg';\r\nimport PenIcon from './PenIcon.svg';\r\nimport ShareIcon from './ShareIcon.svg';\r\nimport StarIcon from './StarIcon.svg';\r\nimport YPenIcon from './YPenIcon.svg';\r\n\r\n\r\nclass IndividualCard extends React.Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = {edit: false};\r\n      this.edit = this.edit.bind(this);\r\n      this.edit2 = this.edit2.bind(this);\r\n   }\r\n\r\n   shouldComponentUpdate(nextProps, nextState){\r\n      if(nextState.edit !== this.state.edit) {\r\n         console.log(nextState);\r\n         return true;\r\n      }\r\n\r\n      return false;\r\n   }\r\n\r\n   edit() {\r\n      let e  = !this.state.edit;\r\n      this.setState({edit: e});\r\n   }\r\n\r\n   edit2 () {\r\n      const newText = document.getElementById('text').value;\r\n      console.log(newText);\r\n      let d = this.props.set; \r\n\r\n      for (let i = 0; i < d.cards.length; i++) {\r\n         if(d.cards[i].term === this.props.term) {\r\n            d.cards[i].def = newText;\r\n         }\r\n      }\r\n\r\nconsole.log(d);\r\n\r\n      fetch('http://127.0.0.1:8000/sets', {\r\n         headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n          },\r\n         method: 'PUT',\r\n          body: JSON.stringify(\r\n             d\r\n          )\r\n      })\r\n\r\n      this.edit();\r\n   }\r\n\r\n   render() {\r\n      return(\r\n\r\n         <div className=\"individualCard\">\r\n         <div className=\"Term\">\r\n                     <h1>{this.props.term}</h1>\r\n                  </div>\r\n         <div className=\"Definition\">\r\n            {this.state.edit && \r\n            <form>\r\n               <textarea id=\"text\">\r\n                  {this.props.def}\r\n               </textarea>\r\n            </form> \r\n            }\r\n\r\n            {!this.state.edit && \r\n            <h1>{this.props.def}</h1>\r\n            }\r\n\r\n            <div className=\"Icons\"> \r\n               <img src={StarIcon} />\r\n\r\n               {this.state.edit && \r\n                  <img src={YPenIcon} onClick={this.edit2} />\r\n               }\r\n               {!this.state.edit && \r\n                  <img src={PenIcon} onClick={this.edit} />\r\n               }\r\n            </div>\r\n         </div>\r\n         </div>\r\n      )\r\n   }\r\n}\r\n\r\nclass CardList extends React.Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = {edit: false};\r\n   }\r\n\r\n   render() {\r\n      return (\r\n         <div>\r\n            {this.props.data.map(card => {\r\n               return (\r\n\r\n                  <IndividualCard def={card.def} term={card.term} set={this.props.set}/>\r\n\r\n               )\r\n            })}\r\n         </div>\r\n      )\r\n   }\r\n         \r\n}\r\nclass SetPage extends React.Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = {cards: this.props.location.state.set.cards, count: this.props.location.state.setSize, cardState: \"Term\"};\r\n\r\n      console.log(this.state);\r\n      this.forwardCard = this.forwardCard.bind(this);\r\n      this.backwardCard = this.backwardCard.bind(this);\r\n      this.changeText = this.changeText.bind(this);\r\n   }\r\n\r\n   forwardCard = () => {\r\n      let currCount = this.state.count + 1 > this.state.cards.length ? 1 : this.state.count + 1;\r\n      let currCards = this.state.cards;\r\n      let popCard = currCards.shift();\r\n      currCards.push(popCard);\r\n      this.setState({cards: currCards, count: currCount, cardState: \"Term\"});\r\n   }\r\n\r\n   backwardCard = () => {\r\n      let currCount = this.state.count ===  1 ? this.state.cards.length : this.state.count - 1;\r\n      let currCards = this.state.cards;\r\n      let popCard = currCards.pop();\r\n      currCards.unshift(popCard);\r\n      this.setState({cards: currCards, count: currCount, cardState: \"Term\"});\r\n   }\r\n\r\n   changeText = () => {\r\n      let currText = this.state.cardState;\r\n      currText === \"Term\" ? this.setState({cardState: \"Definition\"}) : this.setState({cardState: \"Term\"});\r\n\r\n   }\r\n\r\n\r\n   render() {\r\n      console.log(this.props.location.state);\r\n\r\n      return (\r\n         <div>\r\n            <div className=\"header\">\r\n               <h1>WIREFRAME</h1>\r\n            </div>\r\n            <div className=\"setInfo\">\r\n               <h1>{this.props.location.state.title}</h1>\r\n               <div className=\"creatorInfo\">\r\n                  <img src={ProfileIcon} />\r\n                  <div>\r\n                     <h3>Created By</h3>\r\n                     <h2>{this.props.location.state.creatorId}</h2>\r\n                  </div>\r\n               </div>\r\n\r\n\r\n               <div className=\"card\" onClick={this.changeText}>\r\n                  <h1 >{this.state.cardState === \"Term\" ? this.state.cards[0].term : this.state.cards[0].def}</h1>\r\n               </div>\r\n\r\n               <div className=\"cardNav\">\r\n                  <h1 onClick={this.backwardCard} className=\"Arrow\">{\"<\"}  &nbsp;</h1> \r\n                  <h1>{this.state.count} / {this.state.cards.length}</h1> \r\n                  <h1 onClick={this.forwardCard} className=\"Arrow\"> &nbsp; {\">\"}</h1> \r\n               </div>\r\n            </div>\r\n\r\n\r\n            <div className=\"bottomHalf\">\r\n               <div className=\"cueCardsList\">\r\n                  <div className=\"listHeader\">\r\n                     <h1>All &nbsp;</h1>\r\n                     <h2>&nbsp; Starred</h2>\r\n                  </div>\r\n\r\n                  <div class=\"list\">\r\n                     <CardList data={this.props.location.state.set.cards} set={this.props.location.state.set}/>\r\n\r\n                  </div>\r\n               </div>\r\n\r\n            </div>\r\n\r\n\r\n         </div>\r\n      )\r\n   }\r\n}\r\n\r\nexport default SetPage;","C:\\Users\\wensh\\OneDrive - alumni.ubc.ca\\Documents\\Code\\nwHacks2021\\nwhacks2021frontend\\src\\Components\\FileDropper\\FileDropper.js",["57"],"import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport axios from 'axios';\r\n\r\n// Component Dependencies\r\n\r\n// CSS\r\nimport './FileDropper.css';\r\n\r\nclass FileDropper extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selectedFile: null\r\n        }\r\n\r\n        this.fileDidChangeHandler = this.fileDidChangeHandler.bind(this);\r\n        this.uploadButtonClicked = this.uploadButtonClicked.bind(this);\r\n    }\r\n\r\n    async fileDidChangeHandler(event) {\r\n        this.setState({\r\n            selectedFile: event.target.files[0]\r\n        });\r\n        console.log(event.target.files[0]);\r\n\r\n        const data = new FormData();\r\n        data.append('file', event.target.files[0]);\r\n\r\n        const res = await axios.post(`http://localhost:8000/upload?termProperty=${'bold'}&dividerChar=${':'}`, data, {});\r\n        // console.log(res);\r\n\r\n        this.props.handleNewFetchedData(res);\r\n    }\r\n\r\n    async uploadButtonClicked() {\r\n        if (this.state.selectedFile != null) {\r\n            const data = new FormData();\r\n            data.append('file', this.state.selectedFile);\r\n\r\n            const res = await axios.post(`http://localhost:8000/upload?termProperty=${'bold'}&dividerChar=${':'}`, data, {});\r\n            console.log(res);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"FileDropper\">\r\n                <input type=\"file\" name=\"file\" onChange={this.fileDidChangeHandler} className=\"FileInput\"/>\r\n                {/* <div className=\"CreateButtons\">\r\n                    <Button onClick={() => this.uploadButtonClicked()} variant=\"primary\"> Create New Notes </Button>\r\n                    <Button variant=\"light\"> Add to Existing </Button>\r\n                </div> */}\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FileDropper;","C:\\Users\\wensh\\OneDrive - alumni.ubc.ca\\Documents\\Code\\nwHacks2021\\nwhacks2021frontend\\src\\Components\\NoteSetTile\\NoteSetTile.js",["58"],"import React from 'react';\r\nimport {  } from 'react-bootstrap';\r\n\r\n// Component Dependencies\r\n\r\n// CSS\r\nimport './NoteSetTile.css';\r\n\r\n// Icons\r\nimport ProfileIcon from './ProfileIcon.svg';\r\n\r\nclass NoteSetTile extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"NoteSetTile\" onClick={this.props.clickHandler}>\r\n                <div className=\"NoteSetTileInner\">\r\n                    <div className=\"NoteSetTileTop\">\r\n                        <h1 className=\"NoteSetTileTitle\">{`${this.props.setTitle}`}</h1>\r\n                        <p className=\"NoteSetTileTerms\">{`${this.props.setNumTerms} terms`}</p>\r\n                    </div>\r\n                    \r\n                    <p className=\"NoteSetTileCreator\"> <img src={ProfileIcon} width={26} height={26} className=\"d-inline-block align-top\"></img>{` ${this.props.setCreator}`}</p>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NoteSetTile;",{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":1,"column":9,"nodeType":"65","messageId":"66","endLine":1,"endColumn":17},{"ruleId":"63","severity":1,"message":"67","line":1,"column":19,"nodeType":"65","messageId":"66","endLine":1,"endColumn":28},{"ruleId":"68","severity":1,"message":"69","line":139,"column":60,"nodeType":"70","endLine":139,"endColumn":140},{"ruleId":"68","severity":1,"message":"69","line":140,"column":60,"nodeType":"70","endLine":140,"endColumn":142},{"ruleId":"68","severity":1,"message":"69","line":141,"column":60,"nodeType":"70","endLine":141,"endColumn":148},{"ruleId":"63","severity":1,"message":"71","line":77,"column":72,"nodeType":"65","messageId":"66","endLine":77,"endColumn":76},{"ruleId":"63","severity":1,"message":"72","line":84,"column":9,"nodeType":"65","messageId":"66","endLine":84,"endColumn":23},{"ruleId":"63","severity":1,"message":"73","line":90,"column":21,"nodeType":"65","messageId":"66","endLine":90,"endColumn":29},{"ruleId":"63","severity":1,"message":"74","line":187,"column":10,"nodeType":"65","messageId":"66","endLine":187,"endColumn":17},{"ruleId":"68","severity":1,"message":"69","line":318,"column":21,"nodeType":"70","endLine":318,"endColumn":83},{"ruleId":"63","severity":1,"message":"75","line":6,"column":8,"nodeType":"65","messageId":"66","endLine":6,"endColumn":17},{"ruleId":"68","severity":1,"message":"69","line":81,"column":16,"nodeType":"70","endLine":81,"endColumn":38},{"ruleId":"68","severity":1,"message":"69","line":84,"column":19,"nodeType":"70","endLine":84,"endColumn":62},{"ruleId":"68","severity":1,"message":"69","line":87,"column":19,"nodeType":"70","endLine":87,"endColumn":60},{"ruleId":"68","severity":1,"message":"69","line":162,"column":19,"nodeType":"70","endLine":162,"endColumn":44},{"ruleId":"63","severity":1,"message":"76","line":2,"column":10,"nodeType":"65","messageId":"66","endLine":2,"endColumn":16},{"ruleId":"68","severity":1,"message":"69","line":23,"column":56,"nodeType":"70","endLine":23,"endColumn":139},"no-native-reassign",["77"],"no-negated-in-lhs",["78"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'temp' is assigned a value but never used.","'globalUsername' is assigned a value but never used.","'postBody' is assigned a value but never used.","'Example' is defined but never used.","'ShareIcon' is defined but never used.","'Button' is defined but never used.","no-global-assign","no-unsafe-negation"]